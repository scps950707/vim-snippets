# base
snippet base
	.PHONY: clean, mrproper
	CC = gcc
	CFLAGS = -g -Wall

	all: $1

	%.o: %.c
		$(CC) $(CFLAGS) -c -o $@ $<
	
	${1:out}: $1.o
		$(CC) $(CFLAGS) -o $@ $+

	clean:
		rm -f *.o core.*

	mrproper: clean
		rm -f $1
# add
snippet add
	${1:out}: $1.o
		$(CC) $(CFLAGS) -o $@ $+
# print
snippet print
	print-%: ; @echo $*=$($*)
# ifeq
snippet ifeq
	ifeq (${1:cond0}, ${2:cond1})
		${0}
	endif
snippet single
	SRCS = ${1}
	EXT  = ${2:.c}
	OBJS = $(SRCS:$(EXT)=.o)
	EXEC = ${3:testobj}
	CXX  = ${4:gcc}
	CXXFLAGS = ${5}
	DEP  = ${6:dep}

	all:$(EXEC)

	$(EXEC):$(OBJS)
		$(CXX) $(CXXFLAGS) -o $(EXEC) $(OBJS)

	%.o:%$(EXT)
		$(CXX) $(CXXFLAGS) -c $<

	dep:
		$(CXX) $(CXXFLAGS) -M $(SRCS) > $(DEP)

	clean:
		rm -rf $(EXEC) $(OBJS) $(DEP)
snippet double
	CSRCS = ${1}
	EX1_SRCS = ${2}
	EX2_SRCS = ${3}
	EXT = ${4:.c}
	COBJS = $(CSRCS:$(EXT)=.o)
	EX1_OBJS = $(EX1_SRCS:$(EXT)=.o)
	EX2_OBJS = $(EX2_SRCS:$(EXT)=.o)
	EXEC1 = ${5:testobj1}
	EXEC2 = ${6:testobj2}
	CXX = ${7:gcc}
	CXXFLAGS = ${8}
	DEP = ${9:dep}

	all: ${EXEC1} ${EXEC2}

	$(EXEC1): $(COBJS) $(EX1_OBJS)
			$(CXX) $(CXXFLAGS) -o $@ $(COBJS) $(EX1_OBJS)

	$(EXEC2): $(COBJS) $(EX2_OBJS)
			$(CXX) $(CXXFLAGS) -o $@ $(COBJS) $(EX2_OBJS)

	%.o:%$(EXT)
			$(CXX) $(CXXFLAGS) -c $<

	dep:
			$(CXX) $(CXXFLAGS) -M $(CSRCS) $(EX1_SRCS) $(EX2_SRCS) > $(DEP)

	clean:
			rm -rf *.o output $(EXEC1) $(EXEC2) $(DEP)
